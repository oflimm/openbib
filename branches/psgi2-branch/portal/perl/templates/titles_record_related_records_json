[%-

related_records = record.enrich_related_records({ viewname => view }).get_related_records ;

related_records_output = [];

FOREACH related_record IN related_records.sort({order = 'asc', type = 'title'}).get_records ;
  item = related_record.get_fields ;
  item.delete('id','database');

  thisdatabase = related_record.database;
  thisid       = related_record.id;

  thisrecord = {
      id = thisid
      database = {
             link = {
                      rel = 'self'
                      href = "${scheme}://${servername}${path_prefix}/${config.get('databases_loc')}/id/${thisdatabase}.json"
             }
             id                = thisdatabase
             description       = dbinfo.get('dbnames').${thisdatabase}.full
             description_short = dbinfo.get('dbnames').${thisdatabase}.short
             url               = dbinfo.get('urls').${thisdatabase}                          
      }
      fields = item      
  };

  related_records_output.push(thisrecord);
END ;

metainformation = {
   hits        = related_records.get_size()
   ips_user    = qopts.get_option('ips_user')
};

json_output = {
    link = {
        rel = 'self'
        href = "${scheme}://${servername}${path_prefix}/${config.get('databases_loc')}/id/${database}/${config.get('titles_loc')}/id/${titleid}/related_records.json?${cgiapp.to_cgi_querystring}"
    }

    meta    = metainformation
    records = related_records_output
};

to_json(json_output);


-%]