[%-

circulation = [];

FOREACH item IN record.load_circulation.get_circulation;
  item.delete('Entleiher','Gruppe');
  circulation.push(item);
END;

record.set_circulation(circulation);

fields   = record.get_fields(msg);
holdings = record.get_holding ;

is_alekiddr = 0;

FOREACH thisclassification IN fields.${"T0800"} ;
  IF thisclassification.content.match('^DDR-Produktion') ;
    is_alekiddr = 1;
  END;
END;

FOREACH holding IN holdings ;
  IF holding.${"X0014"}.content.match('^AC.*DDR') ;
    is_alekiddr = 1;
  END;
END;

IF is_alekiddr ;
 max_mult = 0;

 FOREACH url IN fields.${"T0662"} ;
  IF url.mult > max_mult ;
     max_mult = url.mult ;
  END ;
 END ;

 max_mult = max_mult + 1;

 new_url = {
  content  = 'http://ddr-kinderbuch.aleki.uni-koeln.de/'
  mult     = max_mult
  subfield = ''
 } ;

 new_desc = {
  content  = 'Dieser Titel ist Teil der Sammlung DDR-Kinderbuch der ALEKI'
  mult     = max_mult
  subfield = ''
 } ;

 IF NOT fields.${"T0662"}.defined ;
   fields.${"T0662"} = [];
 END ;

 IF NOT fields.${"T0663"}.defined ;
   fields.${"T0663"} = [];
 END ;

 fields.${"T0662"}.push(new_url);
 fields.${"T0663"}.push(new_desc);

END ;

thisrecord = {
           link = {
                    rel = 'self'
                    href = "${scheme}://${servername}${path_prefix}/${config.get('databases_loc')}/id/${record.database}/${config.get('titles_loc')}/id/${record.id}.json"
           }
           id       = record.id
           database = {
                link = {
                       rel = 'self'
                       href = "${scheme}://${servername}${path_prefix}/${config.get('databases_loc')}/id/${record.database}.json"
                }
                id                = record.database
                description       = dbinfo.get('dbnames').${record.database}.full
                description_short = dbinfo.get('dbnames').${record.database}.short
                url               = dbinfo.get('urls').${record.database}                          
           }
           fields      = fields
           items       = holdings
           circulation = record.get_circulation
           ddr         = is_alekiddr
           max_mult    = max_mult
};

item_locations = record.get_locations;

IF NOT item_locations;
  item_locations = [ dbinfo.get('locationid').${record.database} ];
END;

blacklisted_locations = { 'DE-38-USBFB' => 1 };

item_locations_out = [];

FOREACH item_location IN item_locations ;
  NEXT IF blacklisted_locations.${item_location}.defined ;

  this_item_location = {
      link = {
              rel = 'self'
              href = "${scheme}://${servername}${path_prefix}/${config.get('locations_loc')}/id/${item_location}.json"
      }
      id = item_location 
      description = locinfo.get('identifier').${item_location}.description  
  };

  item_locations_out.push(this_item_location);
END;

thisrecord.locations = item_locations_out;

to_json(thisrecord);

-%]