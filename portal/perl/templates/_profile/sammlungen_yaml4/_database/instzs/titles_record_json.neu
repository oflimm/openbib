[%-

circulation = [];

FOREACH item IN record.load_circulation.get_circulation;
  item.delete('Entleiher','Gruppe');
  circulation.push(item);
END;

record.set_circulation(circulation);

thisrecord = {
           link = {
                    rel = 'self'
                    href = "${scheme}://${servername}${path_prefix}/${config.get('databases_loc')}/id/${record.database}/${config.get('titles_loc')}/id/${record.id}.json"
           }
           id       = record.id
           database = {
                link = {
                       rel = 'self'
                       href = "${scheme}://${servername}${path_prefix}/${config.get('databases_loc')}/id/${record.database}.json"
                }
                id                = record.database
                description       = dbinfo.get('dbnames').${record.database}.full
                description_short = dbinfo.get('dbnames').${record.database}.short
                url               = dbinfo.get('urls').${record.database}                          
           }
           fields      = record.get_fields(msg)
           circulation = record.get_circulation
};


items = record.get_holding;

FOREACH item IN items ;
   IF item.${"X0014"}.content.match('^EWA-LS Z') || item.${"X0014"}.content.match('^EWA-LS\s*:\s*Z') || item.${"X0014"}.content.match('^EWA Z') ||item.${"X0014"}.content.match('^HP-LS B') ||item.${"X0014"}.content.match('^EWA-LS-Theke Z') ;
      item.${"X4000"}.content = "USB K&ouml;ln / Humanwiss. Abt.";
   END;
END;

thisrecord.items = items;

item_locations = record.get_locations;

IF NOT item_locations;
  item_locations = [ dbinfo.get('locationid').${record.database} ];
END;

blacklisted_locations = { 'DE-38-USBFB' => 1 };

item_locations_out = [];

FOREACH item_location IN item_locations ;
  NEXT IF blacklisted_locations.${item_location}.defined ;

  this_item_location = {
      link = {
              rel = 'self'
              href = "${scheme}://${servername}${path_prefix}/${config.get('locations_loc')}/id/${item_location}.json"
      }
      id = item_location 
      description = locinfo.get('identifier').${item_location}.description  
  };

  item_locations_out.push(this_item_location);
END;

thisrecord.locations = item_locations_out;

to_json(thisrecord);

-%]