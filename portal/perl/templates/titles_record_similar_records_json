[%-

blacklisted_locations = [ 'DE-38-USBFB' ];

similar_records = record.enrich_similar_records({ viewname => view, blacklisted_locations => blacklisted_locations  }).get_similar_records ;

similar_records_output = [];

FOREACH similar_record IN similar_records.sort({order = 'asc', type = 'title'}).get_records ;
  item = similar_record.get_fields ;
  item.delete('id','database');

  thisdatabase = similar_record.database;
  thisid       = similar_record.id;

  thisrecord = {
      id = thisid
      database = {
             link = {
                      rel = 'self'
                      href = "${scheme}://${servername}${path_prefix}/${config.get('databases_loc')}/id/${thisdatabase}.json"
             }
             id                = thisdatabase
             description       = dbinfo.get('dbnames').${thisdatabase}.full
             description_short = dbinfo.get('dbnames').${thisdatabase}.short
             schema            = dbinfo.get('schema').${thisdatabase}
             url               = dbinfo.get('urls').${thisdatabase}                          
      }
      fields = item      
  };

  item_location = similar_record.get_locations.first;

  IF item_location ;
    thisrecord.locations = [{
        link = {
              rel = 'self'
              href = "${scheme}://${servername}${path_prefix}/${config.get('locations_loc')}/id/${item_location}.json"
        }
        id = item_location            
        description = locinfo.get('identifier').${item_location}.description  
    }];
  END;

  similar_records_output.push(thisrecord);
END ;

metainformation = {
   hits        = similar_records.get_hits
   ips_user    = qopts.get_option('ips_user')
};

json_output = {
    link = {
        rel = 'self'
        href = "${scheme}://${servername}${path_prefix}/${config.get('databases_loc')}/id/${database}/${config.get('titles_loc')}/id/${record.get_encoded_id}/similar_records.json?${cgiapp.to_cgi_querystring}"
    }

    meta    = metainformation
    records = similar_records_output
};

to_json(json_output);

-%]