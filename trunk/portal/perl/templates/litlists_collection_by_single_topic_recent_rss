[%#-
#######################################################################
#
# Templatename: helpframe
#
# Typ         : Mastertemplate
#
# Aufgabe:
#
# Ausgabe von katalogspezifischen Wortwolken
#
#######################################################################
-%]
[%-

topic_name = "";
FOREACH topic IN topics ;
   IF topic.id == topicid ;
      topic_name = topic.name ;
   END;
END;

channel_link        = "${path_prefix}/${config.get('litlists_loc')}/${config.get('topics_loc'})/id/${topicid}/recent.rss";
channel_title       = "Literaturlisten zum Themengebiet '${topic_name}'";
channel_description = "RSS Feed der Literaturliste '${litlist.properties.title}' zum Themenbereich ${topic_name} sortiert nach dem Anlegedatum der Literaturlisten";

dummy = rss.channel( "title", channel_title, "link", channel_link, "description", channel_description );

FOREACH thisitem IN public_litlists ;

item_title       = thisitem.title;
item_link        = "http://${config.get('frontendservername')}${path_prefix}/${config.get('litlists_loc')}/id/${thisitem.id}";
item_tstamp      = thisitem.tstamp.split(' ').first;

topics = [];
FOREACH topic IN thisitem.topics ;
  topics.push(topic.name);
END;

IF topics.size > 0 ;
  item_topics = topics.join(' ; ');
ELSE ;
  item_topics = "Keine";
END;

IF thisitem.lecture ;
  item_lecture = "<b>Offizielle Literaturliste des Instituts/Seminars</b><br/>";
END;

item_desc = "
<![CDATA[
${thisitem.itemcount} Titel enthalten<br/><br/>
${item_lecture}
Themengebiet(e): ${item_topics}<br/>
Zuletzt aktualisiert: ${item_tstamp}<br/>
]]>";

dummy = rss.add_item( "title", item_title, "link", item_link, "description", item_desc);

END;
-%]
[% rss.as_string %]
